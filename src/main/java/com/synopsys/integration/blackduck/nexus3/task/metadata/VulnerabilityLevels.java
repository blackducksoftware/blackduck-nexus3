package com.synopsys.integration.blackduck.nexus3.task.metadata;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.synopsys.integration.blackduck.api.generated.view.VulnerabilityV2View;

public class VulnerabilityLevels {
    public static final String HIGH_VULNERABILITY = "HIGH";
    public static final String MEDIUM_VULNERABILITY = "MEDIUM";
    public static final String LOW_VULNERABILITY = "LOW";

    private final Map<String, Integer> trackedVulnerabilities;

    public VulnerabilityLevels() {
        trackedVulnerabilities = new HashMap<>();
        trackedVulnerabilities.put(HIGH_VULNERABILITY, 0);
        trackedVulnerabilities.put(MEDIUM_VULNERABILITY, 0);
        trackedVulnerabilities.put(LOW_VULNERABILITY, 0);
    }

    public void addVulnerabilityCounts(final List<VulnerabilityV2View> vulnerabilityViews) {
        for (final VulnerabilityV2View vulnerability : vulnerabilityViews) {
            final String severity = vulnerability.severity.toUpperCase();
            addVulnerability(severity);
        }
    }

    public void addVulnerability(final String severity) {
        if (HIGH_VULNERABILITY.equals(severity)) {
            addHighVulnerability();
        } else if (MEDIUM_VULNERABILITY.equals(severity)) {
            addMediumVulnerability();
        } else if (LOW_VULNERABILITY.equals(severity)) {
            addLowVulnerability();
        }
    }

    public void addHighVulnerability() {
        final int highVulnerabilities = getHighVulnerabilityCount();
        trackedVulnerabilities.put(HIGH_VULNERABILITY, highVulnerabilities + 1);
    }

    public void addMediumVulnerability() {
        final int mediumVulnerabilities = getMediumVulnerabilityCount();
        trackedVulnerabilities.put(MEDIUM_VULNERABILITY, mediumVulnerabilities + 1);
    }

    public void addLowVulnerability() {
        final int lowVulnerabilities = getLowVulnerabilityCount();
        trackedVulnerabilities.put(LOW_VULNERABILITY, lowVulnerabilities + 1);
    }

    public int getHighVulnerabilityCount() {
        return trackedVulnerabilities.get(HIGH_VULNERABILITY);
    }

    public int getMediumVulnerabilityCount() {
        return trackedVulnerabilities.get(MEDIUM_VULNERABILITY);
    }

    public int getLowVulnerabilityCount() {
        return trackedVulnerabilities.get(LOW_VULNERABILITY);
    }
}
